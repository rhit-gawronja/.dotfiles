(undo-tree-save-format-version . 1)
"0ad523634ee9b5c6e9def73d31c3abee79ea7554"
[nil nil nil nil (25974 23129 428759 642000) 0 nil]
([nil nil ((14465 . 14469) (14464 . 14466) (14461 . 14464) (14460 . 14461) (14459 . 14460) (14438 . 14459) (14435 . 14438) (t 25950 562 396051 528000) 14434) nil (25974 23129 428758 892000) 0 nil])
([nil nil ((14498 . 14505) (14486 . 14498) (14485 . 14486) (14484 . 14486) (#("\"" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . -14484) (14483 . 14485) (14474 . 14483) (#("dire" 0 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -14474) (undo-tree-id2 . -4) (undo-tree-id3 . -4) 14478 (14472 . 14478) (#("i" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -14472) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("g" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . -14473) (undo-tree-id6 . -1) (undo-tree-id7 . -1) 14474 (14470 . 14474) (#("or" 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -14470) (undo-tree-id8 . -2) (undo-tree-id9 . -2) 14472 (14470 . 14472) (14469 . 14470)) nil (25974 23129 428757 527000) 0 nil])
([nil nil ((14548 . 14557) (14547 . 14549) (#("\"" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . -14547) (14547 . 14548) (14546 . 14547) (14540 . 14545) (14536 . 14540) (14535 . 14537) (#("\"" 0 1 (face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . -14535) (14535 . 14536) (14527 . 14536) (14526 . 14527) (14520 . 14526) (#("agen" 0 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -14520) (undo-tree-id0 . -4) (undo-tree-id1 . -4) 14524 (14511 . 14524) (14510 . 14512) (14507 . 14510) 14506) nil (25974 23129 428751 757000) 0 nil])
([nil nil ((5506 . 5750) (#("     (use-package doom-themes
    :init (load-theme 'doom-nova t))
;; (load-theme 'modus-operandi)
  (use-package nerd-icons
    )
  (use-package doom-modeline
    :init (doom-modeline-mode 1)
    :custom ((doom-modeline-height 15)))
  

" 0 5 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 5 6 (src-block t face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 6 17 (src-block t face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 17 18 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 18 29 (src-block t face (font-lock-constant-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 29 34 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 34 39 (src-block t face (font-lock-builtin-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 39 40 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 40 41 (src-block t face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 41 64 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 64 65 (src-block t face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 65 66 (src-block t face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 66 67 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 67 70 (src-block t face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 70 99 (src-block t face (font-lock-comment-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 99 101 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 101 102 (src-block t face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 102 113 (src-block t face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 113 114 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 114 124 (src-block t face (font-lock-constant-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 124 129 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 129 130 (src-block t face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 130 133 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 133 134 (src-block t face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 134 145 (src-block t face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 145 146 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 146 159 (src-block t face (font-lock-constant-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 159 164 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 164 169 (src-block t face (font-lock-builtin-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 169 170 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 170 171 (src-block t face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 171 191 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 191 192 (src-block t face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 192 197 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 197 204 (src-block t face (font-lock-builtin-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 204 205 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 205 206 (src-block t face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 206 207 (src-block t face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 207 230 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 230 231 (src-block t face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 231 232 (src-block t face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 232 233 (src-block t face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 233 238 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 5506) (undo-tree-id233 . -4) (undo-tree-id234 . -4) (undo-tree-id235 . 203) (undo-tree-id236 . -4) (undo-tree-id237 . -34) (undo-tree-id238 . -34) 5541 (t 25974 23129 439850 487000)) nil (25974 23227 988893 252000) 0 nil])
([nil nil ((5587 . 5591) (5586 . 5587) (5585 . 5587) (5510 . 5512) (5539 . 5541) (5582 . 5584) (5614 . 5616) (5644 . 5646) (5646 . 5648) (5679 . 5681) (5708 . 5710) 5506 (5578 . 5581) 5577) nil (25974 23227 989293 336000) 0 nil])
([nil nil ((5647 . 5649) (#("i" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -5647) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) 5648 (5631 . 5648) (#("i" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -5631) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (#("s" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -5632) (undo-tree-id260 . -1) 5633 (5632 . 5633) (5616 . 5632) (5614 . 5617) (5609 . 5614) (5506 . 5507) (#("      " 0 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil) 4 6 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . 5506) (5541 . 5542) (#("      " 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil) 2 6 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . 5541) (5583 . 5585) (5611 . 5617) (5615 . 5617) (5647 . 5648) (5651 . 5652) (5675 . 5676) (#("      " 0 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil) 4 6 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . 5675) (5683 . 5684) (5687 . 5688) (5714 . 5715) (#("      " 0 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil) 4 6 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . 5714) (5749 . 5750) (#("      " 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil) 2 6 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . 5749) 5506 (5610 . 5611) (5599 . 5610) (5597 . 5599) (5590 . 5597) (#("pack" 0 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -5590) (undo-tree-id261 . 4) (undo-tree-id262 . -4) (undo-tree-id263 . -4) 5594 (5591 . 5594)) nil (25974 23268 243025 37000) 0 nil] [nil nil ((#("; :init (load-theme 'doom-nova t))
  (use-" 0 2 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 2 34 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 34 35 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 35 37 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 37 38 (face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 38 42 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 5548) (undo-tree-id10 . -33) (undo-tree-id11 . -41) (undo-tree-id12 . -33) (undo-tree-id13 . -33) (undo-tree-id14 . -33) (undo-tree-id15 . -33) (undo-tree-id16 . -33) (undo-tree-id17 . -33) (undo-tree-id18 . -33) (undo-tree-id19 . -33) (undo-tree-id20 . -33) (undo-tree-id21 . -33) (undo-tree-id22 . -33) (undo-tree-id23 . -33) (undo-tree-id24 . -33) (undo-tree-id25 . -33) (undo-tree-id26 . -33) (undo-tree-id27 . -33) (undo-tree-id28 . -33) (undo-tree-id29 . -33) (undo-tree-id30 . -33) (undo-tree-id31 . -33) (undo-tree-id32 . -33) (undo-tree-id33 . -33) (undo-tree-id34 . -33) (undo-tree-id35 . -33) (undo-tree-id36 . -33) (undo-tree-id37 . -33) (undo-tree-id38 . -33) (undo-tree-id39 . -33) (undo-tree-id40 . -33) (undo-tree-id41 . -33) (undo-tree-id42 . -33) (undo-tree-id43 . -33) (undo-tree-id44 . -33) (undo-tree-id45 . -33) (undo-tree-id46 . -33) (undo-tree-id47 . -33) (undo-tree-id48 . -33) (undo-tree-id49 . -33) (undo-tree-id50 . -33) (undo-tree-id51 . -33) (undo-tree-id52 . -33) (undo-tree-id53 . -33) (undo-tree-id54 . -33) (undo-tree-id55 . -33) (undo-tree-id56 . -37) (undo-tree-id57 . -37) (undo-tree-id58 . -37) (undo-tree-id59 . -37) (undo-tree-id60 . -37) (undo-tree-id61 . -37) (undo-tree-id62 . -37) (undo-tree-id63 . -37) (undo-tree-id64 . -37) (undo-tree-id65 . -37) (undo-tree-id66 . -37) (undo-tree-id67 . -37) (undo-tree-id68 . -37) (undo-tree-id69 . -37) (undo-tree-id70 . -37) (undo-tree-id71 . -37) (undo-tree-id72 . -37) (undo-tree-id73 . -38) (undo-tree-id74 . -38) (undo-tree-id75 . -38) (undo-tree-id76 . -38) (undo-tree-id77 . -38) (undo-tree-id78 . -38) (undo-tree-id79 . -38) (undo-tree-id80 . -38) (undo-tree-id81 . -38) (undo-tree-id82 . -38) (undo-tree-id83 . -38) (undo-tree-id84 . -38) (undo-tree-id85 . -38) (undo-tree-id86 . -38) (undo-tree-id87 . -38) (undo-tree-id88 . -38) (undo-tree-id89 . -38) (undo-tree-id90 . -39) (undo-tree-id91 . -39) (undo-tree-id92 . -39) (undo-tree-id93 . -39) (undo-tree-id94 . -39) (undo-tree-id95 . -39) (undo-tree-id96 . -39) (undo-tree-id97 . -39) (undo-tree-id98 . -39) (undo-tree-id99 . -39) (undo-tree-id100 . -39) (undo-tree-id101 . -39) (undo-tree-id102 . -39) (undo-tree-id103 . -39) (undo-tree-id104 . -39) (undo-tree-id105 . -39) (undo-tree-id106 . -39) (undo-tree-id107 . -39) (undo-tree-id108 . -39) (undo-tree-id109 . -39) (undo-tree-id110 . -39) (undo-tree-id111 . -39) (undo-tree-id112 . -39) (undo-tree-id113 . -39) (undo-tree-id114 . -39) (undo-tree-id115 . -39) (undo-tree-id116 . -39) (undo-tree-id117 . -39) (undo-tree-id118 . -39) (undo-tree-id119 . -39) (undo-tree-id120 . -39) (undo-tree-id121 . -39) (undo-tree-id122 . -39) (undo-tree-id123 . -39) (undo-tree-id124 . -39) (undo-tree-id125 . -39) (undo-tree-id126 . -39) (undo-tree-id127 . -39) (undo-tree-id128 . -39) (undo-tree-id129 . -39) (undo-tree-id130 . -39) (undo-tree-id131 . -39) (undo-tree-id132 . -39) (undo-tree-id133 . -39) (undo-tree-id134 . -39) (undo-tree-id135 . -40) (undo-tree-id136 . -40) (undo-tree-id137 . -40) (undo-tree-id138 . -40) (undo-tree-id139 . -40) (undo-tree-id140 . -40) (undo-tree-id141 . -40) (undo-tree-id142 . -40) (undo-tree-id143 . -40) (undo-tree-id144 . -40) (undo-tree-id145 . -40) (undo-tree-id146 . -40) (undo-tree-id147 . -40) (undo-tree-id148 . -40) (undo-tree-id149 . -40) (undo-tree-id150 . -40) (undo-tree-id151 . -41) (undo-tree-id152 . -41) (undo-tree-id153 . -41) (undo-tree-id154 . -41) (undo-tree-id155 . -41) (undo-tree-id156 . -41) (undo-tree-id157 . -41) (undo-tree-id158 . -41) (undo-tree-id159 . -41) (undo-tree-id160 . -41) (undo-tree-id161 . -41) (undo-tree-id162 . -41) (undo-tree-id163 . -41) (undo-tree-id164 . -41) (undo-tree-id165 . -41) (undo-tree-id166 . -41) (undo-tree-id167 . -41) (undo-tree-id168 . -41) (undo-tree-id169 . -41) (undo-tree-id170 . -41) (undo-tree-id171 . -41) (undo-tree-id172 . -41) (undo-tree-id173 . -41) (undo-tree-id174 . -41) (undo-tree-id175 . -41) (undo-tree-id176 . -42) (undo-tree-id177 . -42) (undo-tree-id178 . -42) (undo-tree-id179 . -42) (undo-tree-id180 . -42) (undo-tree-id181 . -42) (undo-tree-id182 . -42) (undo-tree-id183 . -42) (undo-tree-id184 . -42) (undo-tree-id185 . -42) (undo-tree-id186 . -42) (undo-tree-id187 . -42) (undo-tree-id188 . -42) (undo-tree-id189 . -42) (undo-tree-id190 . -42) (undo-tree-id191 . -42) (undo-tree-id192 . -42) (undo-tree-id193 . -42) (undo-tree-id194 . -42) (undo-tree-id195 . -42) (undo-tree-id196 . -42) (undo-tree-id197 . -42) (undo-tree-id198 . -42) (undo-tree-id199 . -42) (undo-tree-id200 . -42) (undo-tree-id201 . -42) (undo-tree-id202 . -42) (undo-tree-id203 . -42) (undo-tree-id204 . -42) (undo-tree-id205 . -42) (undo-tree-id206 . -42) (undo-tree-id207 . -42) (undo-tree-id208 . -42) (undo-tree-id209 . -42) (undo-tree-id210 . -42) (undo-tree-id211 . -42) (undo-tree-id212 . -42) (undo-tree-id213 . -42) (undo-tree-id214 . -42) (undo-tree-id215 . -42) (undo-tree-id216 . -42) (undo-tree-id217 . -42) (undo-tree-id218 . -42) (undo-tree-id219 . -42) (undo-tree-id220 . -42) (undo-tree-id221 . -42) (undo-tree-id222 . -42) (undo-tree-id223 . -42) (undo-tree-id224 . -42) (undo-tree-id225 . -42) (undo-tree-id226 . -42) (undo-tree-id227 . -42) (undo-tree-id228 . -42) (undo-tree-id229 . -42) (undo-tree-id230 . -42) (undo-tree-id231 . -42) (undo-tree-id232 . -42) 5590) ((5548 . 5590)) (25974 23227 988883 387000) 0 nil])
([nil nil ((5649 . 5651)) nil (25974 23268 243006 234000) 0 nil])
nil
([nil nil ((#("p" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -1762) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) 1763 (1762 . 1763) (1344 . 1346) (1377 . 1378) (1379 . 1380) (1398 . 1399) (1400 . 1401) (1421 . 1422) (1423 . 1424) (1444 . 1445) (1446 . 1447) (1483 . 1485) (1509 . 1511) (1527 . 1529) (1548 . 1550) (1585 . 1587) (1615 . 1617) (#("              " 0 14 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . 1615) (1646 . 1648) (#("              " 0 14 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . 1646) (1678 . 1680) (#("              " 0 14 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . 1678) (1713 . 1715) 1340 (1773 . 1776) (t 25974 23268 246966 488000) 1741) nil (25974 23699 891285 123000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1842 . 1843) (nil fontified nil 1762 . 1843) (1762 . 1843) 1761) nil (25974 23699 891263 708000) 0 nil])
([nil nil ((#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -1845) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (#("e" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -1846) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) 1847 (1846 . 1847) (1843 . 1846) (t 25974 23699 904267 450000) 1842) nil (25974 23717 914165 847000) 0 nil])
([nil nil ((5578 . 5894) (#("	;;  (use-package doom-themes
	;; :init (load-theme 'doom-nova t))
    (use-package modus-themes
      :init (load-theme 'modus-operandi-tinted t))
    ;; (load-theme 'modus-operandi)
      (use-package nerd-icons
	)
      (use-package doom-modeline
	:init (doom-modeline-mode 1)
	:custom ((doom-modeline-height 15)))
  

" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 1 5 (src-block t face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 5 30 (src-block t face (font-lock-comment-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 30 31 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 31 34 (src-block t face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 34 67 (src-block t face (font-lock-comment-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 67 71 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 71 72 (src-block t face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 72 83 (src-block t face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 83 84 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 84 96 (src-block t face (font-lock-constant-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 96 103 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 103 108 (src-block t face (font-lock-builtin-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 108 109 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 109 110 (src-block t face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 110 145 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 145 146 (src-block t face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 146 147 (src-block t face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 147 152 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 152 155 (src-block t face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 155 184 (src-block t face (font-lock-comment-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 184 190 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 190 191 (src-block t face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 191 202 (src-block t face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 202 203 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 203 213 (src-block t face (font-lock-constant-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 213 215 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 215 216 (src-block t face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 216 223 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 223 224 (src-block t face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 224 235 (src-block t face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 235 236 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 236 249 (src-block t face (font-lock-constant-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 249 251 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 251 256 (src-block t face (font-lock-builtin-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 256 257 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 257 258 (src-block t face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 258 278 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 278 279 (src-block t face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 279 281 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 281 288 (src-block t face (font-lock-builtin-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 288 289 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 289 290 (src-block t face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 290 291 (src-block t face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 291 314 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 314 315 (src-block t face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 315 316 (src-block t face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 316 317 (src-block t face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 317 322 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 5578) (undo-tree-id90 . -23) (undo-tree-id91 . -23) (undo-tree-id92 . 268) (undo-tree-id93 . -23) (undo-tree-id94 . -53) (undo-tree-id95 . -53) 5632 (t 26008 54948 513484 851000)) nil (26008 55600 713388 321000) 0 nil])
([nil nil ((#("k" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -5645) (undo-tree-id89 . -1) 5646 (5645 . 5646) (5580 . 5582) (5606 . 5608) (5638 . 5641) (5640 . 5641) (5644 . 5645) (5670 . 5671) (#("      " 0 6 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil)) . 5670) (5721 . 5722) (5725 . 5726) (5757 . 5758) (#("      " 0 6 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil)) . 5757) (#(")
  " 0 1 (src-block t face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t font-lock-fontified t fontified nil) 1 4 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil)) . 5788) (5794 . 5797) (#("  " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil)) . 5794) (5824 . 5826) (5854 . 5856) 5578 (5637 . 5638)) nil (26008 55600 713385 710000) 0 nil])
([nil nil ((5578 . 5900) (#("	   (use-package doom-themes
	  :init (load-theme 'doom-nova t)
	  )
      (use-package modus-themes
	:init (load-theme 'modus-operandi-tinted t))
      ;; (load-theme 'modus-operandi)
	(use-package nerd-icons
	  )
	(use-package doom-modeline
	  :init (doom-modeline-mode 1)
	  :custom ((doom-modeline-height 15)))
  

" 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 2 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 4 5 (face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 5 16 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 16 17 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 17 28 (face (font-lock-constant-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 28 30 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 30 32 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 32 37 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 37 38 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 38 39 (face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 39 62 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 62 63 (face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 63 64 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 64 67 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 67 68 (face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 68 69 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 69 70 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 70 74 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 74 75 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 75 76 (face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 76 87 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 87 88 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 88 100 (face (font-lock-constant-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 100 101 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 101 102 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 102 107 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 107 108 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 108 109 (face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 109 144 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 144 145 (face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 145 146 (face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 146 147 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 147 148 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 148 152 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 152 153 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 153 156 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 156 185 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 185 186 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 186 187 (face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 187 198 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 198 199 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 199 209 (face (font-lock-constant-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 209 211 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 211 213 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 213 214 (face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 214 216 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 216 217 (face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 217 228 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 228 229 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 229 242 (face (font-lock-constant-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 242 244 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 244 246 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 246 251 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 251 252 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 252 253 (face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 253 273 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 273 274 (face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 274 276 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 276 278 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 278 285 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 285 286 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 286 287 (face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 287 288 (face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 288 311 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 311 312 (face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 312 313 (face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 313 314 (face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 314 319 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 5578) (undo-tree-id85 . 257) (undo-tree-id86 . -61) (undo-tree-id87 . 252) (undo-tree-id88 . -31) 5609) nil (26008 55600 713384 251000) 0 nil])
([nil nil ((5582 . 5584) (5608 . 5609) (5610 . 5611) (#("  )
 " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 2 3 (src-block t face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t font-lock-fontified t fontified nil) 3 5 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil)) . 5646) (5655 . 5658) (#(" " 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil)) . 5655) (5683 . 5685) (#(")
" 0 2 (src-block t face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t font-lock-fontified t fontified nil)) . 5725) (undo-tree-id84 . -1) (5729 . 5730) (#("    " 0 4 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil)) . 5729) (5735 . 5738) (5768 . 5770) (5795 . 5797) (5798 . 5800) (5828 . 5830) (5858 . 5860) 5578 (5726 . 5727)) nil (26008 55600 713382 200000) 0 nil])
([nil nil ((5578 . 5915) (#("	     (use-package doom-themes
	    ;; :init (load-theme 'doom-nova t)
	    )
	(use-package modus-themes
	  :init (load-theme 'modus-operandi-tinted t)
	  )
	;; (load-theme 'modus-operandi)
	  (use-package nerd-icons
	    )
	  (use-package doom-modeline
	    :init (doom-modeline-mode 1)
	    :custom ((doom-modeline-height 15)))
  

" 0 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 4 6 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 6 7 (face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 7 18 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 18 19 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 19 30 (face (font-lock-constant-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 30 32 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 32 33 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 33 35 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 35 36 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 36 39 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 39 71 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 71 72 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 72 76 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 76 77 (src-block t face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 77 79 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 79 80 (face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 80 91 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 91 92 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 92 104 (face (font-lock-constant-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 104 106 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 106 108 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 108 113 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 113 114 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 114 115 (face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 115 150 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 150 151 (face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 151 152 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 152 153 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 153 155 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 155 156 (src-block t face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 156 158 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 158 161 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 161 190 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 190 191 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 191 193 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 193 194 (face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 194 205 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 205 206 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 206 216 (face (font-lock-constant-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 216 220 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 220 222 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 222 223 (face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 223 225 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 225 227 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 227 228 (face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 228 239 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 239 240 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 240 253 (face (font-lock-constant-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 253 257 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 257 259 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 259 264 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 264 265 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 265 266 (face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 266 286 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 286 287 (face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 287 289 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 289 291 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 291 293 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 293 300 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 300 301 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 301 302 (face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 302 303 (face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 303 326 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 326 327 (face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 327 328 (face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 328 329 (face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 329 334 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 5578) (undo-tree-id82 . 179) (undo-tree-id83 . -108) 5686) nil (26008 55600 713380 805000) 0 nil])
([nil nil ((5710 . 5715) (5702 . 5710) (5692 . 5702) (#("e" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -5692) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) 5693 (5691 . 5693) (5690 . 5692) (5684 . 5690) (5578 . 5579) (#("      " 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil) 2 6 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . 5578) (5610 . 5611) (#("      " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil) 1 5 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil) 5 6 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . 5610) (5651 . 5652) (#("      " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil) 1 5 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil) 5 6 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . 5651) (5659 . 5660) (5661 . 5662) (5691 . 5697) (5693 . 5695) (5725 . 5727) (5772 . 5774) (5780 . 5782) (5812 . 5814) (5840 . 5841) (#("      " 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil) 2 6 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . 5840) (5848 . 5849) (5852 . 5853) (5879 . 5880) (#("      " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil) 1 5 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil) 5 6 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . 5879) (5914 . 5915) (#("      " 0 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil) 4 6 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . 5914) 5578 (5690 . 5691) (5683 . 5690) (5678 . 5683) (#("u" 0 1 (face (font-lock-constant-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -5678) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (#("p" 0 1 (face (font-lock-constant-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -5679) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) 5680 (5674 . 5680) (5665 . 5674) (5662 . 5665) (5661 . 5663) (5578 . 5580) (#("	" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil)) . 5578) (5609 . 5610) (#("	" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil)) . 5609) (5614 . 5615) (5649 . 5650) (#("	" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil)) . 5649) (5654 . 5655) (5659 . 5661) (#("	" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil)) . 5659) (5686 . 5688) (#("	" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil)) . 5686) (5736 . 5737) (#("	" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil)) . 5736) (5739 . 5740) (5741 . 5743) (#("	" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil)) . 5741) (5774 . 5776) (#("	" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil)) . 5774) (5801 . 5803) (#("	" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil)) . 5801) (5808 . 5809) (#("	" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil)) . 5808) (5811 . 5812) (5838 . 5839) (#("	" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil)) . 5838) (5843 . 5844) (#("	" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil)) . 5872) (5877 . 5879) (#("  " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil)) . 5914) 5578 (5655 . 5658) 5654) nil (26008 55600 713375 644000) 0 nil])
([nil nil ((11077 . 11085) (#("a" 0 1 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -11077) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#("r" 0 1 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -11078) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) 11079 (11074 . 11079) (10637 . 10639) (10662 . 10663) (10666 . 10667) (10701 . 10702) (10705 . 10706) (10713 . 10714) (10717 . 10718) (10784 . 10785) (10788 . 10789) (10825 . 10826) (10829 . 10830) (10863 . 10864) (10867 . 10868) (10898 . 10899) (10902 . 10903) (10910 . 10911) (10914 . 10915) (10938 . 10940) (10960 . 10962) (10987 . 10989) (10995 . 10997) (11018 . 11020) (11040 . 11046) 10633 (11039 . 11040) (11019 . 11039) (11018 . 11020) (11015 . 11018) (t 26008 55600 728312 41000) 11001) nil (26008 56216 134543 525000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11404 . 11405) (nil fontified nil 11087 . 11405) (11087 . 11405) (t 26008 56216 148202 261000)) nil (26008 56298 51353 628000) 0 nil])
([nil nil ((#(":quelpa
    (lsp-pyright
        :fetcher git
        :url \"https://github.com/emacs-lsp/lsp-pyright\")
" 0 7 (src-block t face (font-lock-builtin-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 7 12 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 12 13 (src-block t face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 13 33 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 33 41 (src-block t face (font-lock-builtin-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 41 54 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 54 58 (src-block t face (font-lock-builtin-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 58 59 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 59 60 (src-block t face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 60 99 (src-block t face (font-lock-string-face org-block) font-lock-fontified t font-lock-multiline t htmlize-link (:uri "https://github.com/emacs-lsp/lsp-pyright") help-echo "LINK: https://github.com/emacs-lsp/lsp-pyright" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight fontified t) 99 100 (src-block t face (font-lock-string-face org-block) font-lock-fontified t font-lock-multiline t htmlize-link (:uri "https://github.com/emacs-lsp/lsp-pyright") help-echo "LINK: https://github.com/emacs-lsp/lsp-pyright" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t) 100 101 (src-block t face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 101 102 (src-block t face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 102 103 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 11130) (undo-tree-id47 . -102) (undo-tree-id48 . -102) (undo-tree-id49 . -102) (undo-tree-id50 . -102) (undo-tree-id51 . -102) (undo-tree-id52 . -102) (undo-tree-id53 . -102) (undo-tree-id54 . -102) (undo-tree-id55 . -102) (undo-tree-id56 . -102) (undo-tree-id57 . -102) (undo-tree-id58 . -102) (undo-tree-id59 . -103) 11232) nil (26008 56298 51352 578000) 0 nil])
([nil nil ((11117 . 11125) (#("ensure" 0 6 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 11117) (undo-tree-id36 . -5) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -6) (undo-tree-id46 . -6)) nil (26008 56298 51284 931000) 0 nil])
([nil nil ((12152 . 12156) (t 26008 56298 96163 531000)) nil (26009 24668 785644 744000) 0 nil])
([nil nil ((12152 . 12153)) nil (26009 24668 785644 330000) 0 nil])
([nil nil ((12157 . 12158) (#("c" 0 1 (face org-level-2 font-lock-fontified t fontified t)) . 12157) (undo-tree-id661 . -1)) nil (26009 24668 785643 794000) 0 nil])
([nil nil ((12208 . 12215) (#("end" 0 3 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -12208) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -2) (undo-tree-id572 . -2) (undo-tree-id573 . -2) (undo-tree-id574 . -2) (undo-tree-id575 . -2) (undo-tree-id576 . -2) (undo-tree-id577 . -2) (undo-tree-id578 . -2) (undo-tree-id579 . -2) (undo-tree-id580 . -2) (undo-tree-id581 . -2) (undo-tree-id582 . -2) (undo-tree-id583 . -2) (undo-tree-id584 . -2) (undo-tree-id585 . -2) (undo-tree-id586 . -2) (undo-tree-id587 . -3) (undo-tree-id588 . -3) (undo-tree-id589 . -3) (undo-tree-id590 . -3) (undo-tree-id591 . -3) (undo-tree-id592 . -3) (undo-tree-id593 . -3) (undo-tree-id594 . -3) (undo-tree-id595 . -3) (undo-tree-id596 . -3) (undo-tree-id597 . -3) (undo-tree-id598 . -3) (undo-tree-id599 . -3) (undo-tree-id600 . -3) (undo-tree-id601 . -3) (undo-tree-id602 . -3) (undo-tree-id603 . -3) (undo-tree-id604 . -3) (undo-tree-id605 . -3) (undo-tree-id606 . -3) (undo-tree-id607 . -3) (undo-tree-id608 . -3) (undo-tree-id609 . -3) (undo-tree-id610 . -3) (undo-tree-id611 . -3) (undo-tree-id612 . -3) (undo-tree-id613 . -3) (undo-tree-id614 . -3) (undo-tree-id615 . -3) (undo-tree-id616 . -3) (undo-tree-id617 . -3) (undo-tree-id618 . -3) (undo-tree-id619 . -3) (undo-tree-id620 . -3) (undo-tree-id621 . -3) (undo-tree-id622 . -3) (undo-tree-id623 . -3) (undo-tree-id624 . -3) (undo-tree-id625 . -3) (undo-tree-id626 . -3) (undo-tree-id627 . -3) (undo-tree-id628 . -3) (undo-tree-id629 . -3) (undo-tree-id630 . -3) (undo-tree-id631 . -3) (undo-tree-id632 . -3) (undo-tree-id633 . -3) (undo-tree-id634 . -3) (undo-tree-id635 . -3) (undo-tree-id636 . -3) (undo-tree-id637 . -3) (undo-tree-id638 . -3) (undo-tree-id639 . -3) (undo-tree-id640 . -3) (undo-tree-id641 . -3) (undo-tree-id642 . -3) (undo-tree-id643 . -3) (undo-tree-id644 . -3) (undo-tree-id645 . -3) (undo-tree-id646 . -3) (undo-tree-id647 . -3) (undo-tree-id648 . -3) (undo-tree-id649 . -3) 12211 (12206 . 12211) (12205 . 12206) (12190 . 12205) (12186 . 12190) (#("e" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -12186) (undo-tree-id650 . -1) (undo-tree-id651 . -1) 12187 (12180 . 12187) (#(":tan" 0 4 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -12180) (undo-tree-id652 . -4) (undo-tree-id653 . -4) 12184 (12180 . 12184) (#(" " 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -12180) (undo-tree-id654 . -1) 12181 (12174 . 12181) (12164 . 12174) (#("begin" 0 5 (face org-meta-line font-lock-fontified t fontified t)) . -12164) (undo-tree-id655 . -5) (undo-tree-id656 . -5) 12169 (12164 . 12169) (12163 . 12164) (#("_" 0 1 (font-lock-fontified t fontified t)) . -12163) (undo-tree-id657 . -1) 12164 (12162 . 12164) (#("$" 0 1 (fontified t)) . -12162) (undo-tree-id658 . -1) 12163 (12162 . 12163) (12161 . 12162) (12158 . 12161) (#("v" 0 1 (face org-level-2 fontified t)) . -12158) (undo-tree-id659 . -1) (#("a" 0 1 (face org-level-2 fontified t)) . -12159) (undo-tree-id660 . -1) 12160 (12158 . 12160)) nil (26009 24668 785640 232000) 0 nil])
([nil nil ((12206 . 12208) (12206 . 12207) 12214) nil (26009 24668 785590 632000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12342 . 12343) (nil fontified nil 12208 . 12343) (12208 . 12343) 12207) nil (26009 24668 785589 839000) 0 nil])
([nil nil ((#("(add-hook 'java-mode-hook 'lsp)" 0 31 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 12238) (undo-tree-id243 . -30) (undo-tree-id244 . -30) (undo-tree-id245 . -30) (undo-tree-id246 . -30) (undo-tree-id247 . -30) (undo-tree-id248 . -30) (undo-tree-id249 . -30) (undo-tree-id250 . -30) (undo-tree-id251 . -30) (undo-tree-id252 . -30) (undo-tree-id253 . -30) (undo-tree-id254 . -30) (undo-tree-id255 . -30) (undo-tree-id256 . -30) (undo-tree-id257 . -30) (undo-tree-id258 . -30) (undo-tree-id259 . -30) (undo-tree-id260 . -30) (undo-tree-id261 . -30) (undo-tree-id262 . -30) (undo-tree-id263 . -30) (undo-tree-id264 . -30) (undo-tree-id265 . -30) (undo-tree-id266 . -30) (undo-tree-id267 . -30) (undo-tree-id268 . -30) (undo-tree-id269 . -30) (undo-tree-id270 . -30) (undo-tree-id271 . -30) (undo-tree-id272 . -30) (undo-tree-id273 . -30) (undo-tree-id274 . -30) (undo-tree-id275 . -30) (undo-tree-id276 . -30) (undo-tree-id277 . -30) (undo-tree-id278 . -30) (undo-tree-id279 . -30) (undo-tree-id280 . -30) (undo-tree-id281 . -30) (undo-tree-id282 . -30) (undo-tree-id283 . -30) (undo-tree-id284 . -30) (undo-tree-id285 . -30) (undo-tree-id286 . -30) (undo-tree-id287 . -29) (undo-tree-id288 . -29) (undo-tree-id289 . -29) (undo-tree-id290 . -29) (undo-tree-id291 . -29) (undo-tree-id292 . -29) (undo-tree-id293 . -29) (undo-tree-id294 . -29) (undo-tree-id295 . -29) (undo-tree-id296 . -29) (undo-tree-id297 . -29) (undo-tree-id298 . -29) (undo-tree-id299 . -29) (undo-tree-id300 . -29) (undo-tree-id301 . -29) (undo-tree-id302 . -28) (undo-tree-id303 . -28) (undo-tree-id304 . -28) (undo-tree-id305 . -28) (undo-tree-id306 . -28) (undo-tree-id307 . -28) (undo-tree-id308 . -28) (undo-tree-id309 . -28) (undo-tree-id310 . -27) (undo-tree-id311 . -27) (undo-tree-id312 . -27) (undo-tree-id313 . -27) (undo-tree-id314 . -27) (undo-tree-id315 . -27) (undo-tree-id316 . -27) (undo-tree-id317 . -27) (undo-tree-id318 . -26) (undo-tree-id319 . -26) (undo-tree-id320 . -26) (undo-tree-id321 . -26) (undo-tree-id322 . -26) (undo-tree-id323 . -26) (undo-tree-id324 . -26) (undo-tree-id325 . -26) (undo-tree-id326 . -25) (undo-tree-id327 . -25) (undo-tree-id328 . -25) (undo-tree-id329 . -25) (undo-tree-id330 . -25) (undo-tree-id331 . -25) (undo-tree-id332 . -25) (undo-tree-id333 . -25) (undo-tree-id334 . -24) (undo-tree-id335 . -24) (undo-tree-id336 . -24) (undo-tree-id337 . -24) (undo-tree-id338 . -24) (undo-tree-id339 . -24) (undo-tree-id340 . -24) (undo-tree-id341 . -24) (undo-tree-id342 . -23) (undo-tree-id343 . -23) (undo-tree-id344 . -23) (undo-tree-id345 . -23) (undo-tree-id346 . -23) (undo-tree-id347 . -23) (undo-tree-id348 . -23) (undo-tree-id349 . -23) (undo-tree-id350 . -22) (undo-tree-id351 . -22) (undo-tree-id352 . -22) (undo-tree-id353 . -22) (undo-tree-id354 . -22) (undo-tree-id355 . -22) (undo-tree-id356 . -22) (undo-tree-id357 . -22) (undo-tree-id358 . -21) (undo-tree-id359 . -21) (undo-tree-id360 . -21) (undo-tree-id361 . -21) (undo-tree-id362 . -21) (undo-tree-id363 . -21) (undo-tree-id364 . -21) (undo-tree-id365 . -21) (undo-tree-id366 . -20) (undo-tree-id367 . -20) (undo-tree-id368 . -20) (undo-tree-id369 . -20) (undo-tree-id370 . -20) (undo-tree-id371 . -20) (undo-tree-id372 . -20) (undo-tree-id373 . -20) (undo-tree-id374 . -19) (undo-tree-id375 . -19) (undo-tree-id376 . -19) (undo-tree-id377 . -19) (undo-tree-id378 . -19) (undo-tree-id379 . -19) (undo-tree-id380 . -19) (undo-tree-id381 . -19) (undo-tree-id382 . -18) (undo-tree-id383 . -18) (undo-tree-id384 . -18) (undo-tree-id385 . -18) (undo-tree-id386 . -18) (undo-tree-id387 . -18) (undo-tree-id388 . -18) (undo-tree-id389 . -18) (undo-tree-id390 . -17) (undo-tree-id391 . -17) (undo-tree-id392 . -17) (undo-tree-id393 . -17) (undo-tree-id394 . -17) (undo-tree-id395 . -17) (undo-tree-id396 . -17) (undo-tree-id397 . -17) (undo-tree-id398 . -16) (undo-tree-id399 . -16) (undo-tree-id400 . -16) (undo-tree-id401 . -16) (undo-tree-id402 . -16) (undo-tree-id403 . -16) (undo-tree-id404 . -16) (undo-tree-id405 . -16) (undo-tree-id406 . -15) (undo-tree-id407 . -15) (undo-tree-id408 . -15) (undo-tree-id409 . -15) (undo-tree-id410 . -15) (undo-tree-id411 . -15) (undo-tree-id412 . -15) (undo-tree-id413 . -15) (undo-tree-id414 . -14) (undo-tree-id415 . -14) (undo-tree-id416 . -14) (undo-tree-id417 . -14) (undo-tree-id418 . -14) (undo-tree-id419 . -14) (undo-tree-id420 . -14) (undo-tree-id421 . -14) (undo-tree-id422 . -13) (undo-tree-id423 . -13) (undo-tree-id424 . -13) (undo-tree-id425 . -13) (undo-tree-id426 . -13) (undo-tree-id427 . -13) (undo-tree-id428 . -13) (undo-tree-id429 . -13) (undo-tree-id430 . -12) (undo-tree-id431 . -12) (undo-tree-id432 . -12) (undo-tree-id433 . -12) (undo-tree-id434 . -12) (undo-tree-id435 . -12) (undo-tree-id436 . -12) (undo-tree-id437 . -12) (undo-tree-id438 . -11) (undo-tree-id439 . -11) (undo-tree-id440 . -11) (undo-tree-id441 . -11) (undo-tree-id442 . -11) (undo-tree-id443 . -11) (undo-tree-id444 . -11) (undo-tree-id445 . -11) (undo-tree-id446 . -10) (undo-tree-id447 . -10) (undo-tree-id448 . -10) (undo-tree-id449 . -10) (undo-tree-id450 . -10) (undo-tree-id451 . -10) (undo-tree-id452 . -10) (undo-tree-id453 . -10) (undo-tree-id454 . -9) (undo-tree-id455 . -9) (undo-tree-id456 . -9) (undo-tree-id457 . -9) (undo-tree-id458 . -9) (undo-tree-id459 . -9) (undo-tree-id460 . -9) (undo-tree-id461 . -9) (undo-tree-id462 . -8) (undo-tree-id463 . -8) (undo-tree-id464 . -8) (undo-tree-id465 . -8) (undo-tree-id466 . -8) (undo-tree-id467 . -8) (undo-tree-id468 . -8) (undo-tree-id469 . -8) (undo-tree-id470 . -7) (undo-tree-id471 . -7) (undo-tree-id472 . -7) (undo-tree-id473 . -7) (undo-tree-id474 . -7) (undo-tree-id475 . -7) (undo-tree-id476 . -7) (undo-tree-id477 . -7) (undo-tree-id478 . -6) (undo-tree-id479 . -6) (undo-tree-id480 . -6) (undo-tree-id481 . -6) (undo-tree-id482 . -6) (undo-tree-id483 . -6) (undo-tree-id484 . -6) (undo-tree-id485 . -6) (undo-tree-id486 . -5) (undo-tree-id487 . -5) (undo-tree-id488 . -5) (undo-tree-id489 . -5) (undo-tree-id490 . -5) (undo-tree-id491 . -5) (undo-tree-id492 . -5) (undo-tree-id493 . -5) (undo-tree-id494 . -4) (undo-tree-id495 . -4) (undo-tree-id496 . -4) (undo-tree-id497 . -4) (undo-tree-id498 . -4) (undo-tree-id499 . -4) (undo-tree-id500 . -4) (undo-tree-id501 . -4) (undo-tree-id502 . -3) (undo-tree-id503 . -3) (undo-tree-id504 . -3) (undo-tree-id505 . -3) (undo-tree-id506 . -3) (undo-tree-id507 . -3) (undo-tree-id508 . -3) (undo-tree-id509 . -3) (undo-tree-id510 . -2) (undo-tree-id511 . -2) (undo-tree-id512 . -2) (undo-tree-id513 . -2) (undo-tree-id514 . -2) (undo-tree-id515 . -2) (undo-tree-id516 . -2) (undo-tree-id517 . -2) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -31)) nil (26009 24668 785585 587000) 0 nil])
([nil nil ((12185 . 12188) (#("l" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -12185) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) 12186) nil (26009 24668 785473 225000) 0 nil])
([nil nil ((#(":config" 0 7 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 12232) (undo-tree-id109 . -6) (undo-tree-id110 . -6) (undo-tree-id111 . -6) (undo-tree-id112 . -7) (undo-tree-id113 . -7) (undo-tree-id114 . -7) (undo-tree-id115 . -7) (undo-tree-id116 . -7) (undo-tree-id117 . -7) (undo-tree-id118 . -7) (undo-tree-id119 . -7) (undo-tree-id120 . -7) (undo-tree-id121 . -7) (undo-tree-id122 . -7) (undo-tree-id123 . -7) (undo-tree-id124 . -7) (undo-tree-id125 . -7) (undo-tree-id126 . -7) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -2) (undo-tree-id135 . -2) (undo-tree-id136 . -2) (undo-tree-id137 . -2) (undo-tree-id138 . -2) (undo-tree-id139 . -2) (undo-tree-id140 . -2) (undo-tree-id141 . -2) (undo-tree-id142 . -3) (undo-tree-id143 . -3) (undo-tree-id144 . -3) (undo-tree-id145 . -3) (undo-tree-id146 . -3) (undo-tree-id147 . -3) (undo-tree-id148 . -3) (undo-tree-id149 . -3) (undo-tree-id150 . -4) (undo-tree-id151 . -4) (undo-tree-id152 . -4) (undo-tree-id153 . -4) (undo-tree-id154 . -4) (undo-tree-id155 . -4) (undo-tree-id156 . -4) (undo-tree-id157 . -4) (undo-tree-id158 . -5) (undo-tree-id159 . -5) (undo-tree-id160 . -5) (undo-tree-id161 . -5) (undo-tree-id162 . -5) (undo-tree-id163 . -5) (undo-tree-id164 . -5) (undo-tree-id165 . -5) (undo-tree-id166 . -6) (undo-tree-id167 . -6) (undo-tree-id168 . -6) (undo-tree-id169 . -6) (undo-tree-id170 . -6) (undo-tree-id171 . -6) (undo-tree-id172 . -6) (undo-tree-id173 . -6) (undo-tree-id174 . -6) (undo-tree-id175 . -6) (undo-tree-id176 . -6) (undo-tree-id177 . -6) (undo-tree-id178 . -6) (undo-tree-id179 . -6) (undo-tree-id180 . -6) (undo-tree-id181 . -6) (undo-tree-id182 . -6) (undo-tree-id183 . -5) (undo-tree-id184 . -5) (undo-tree-id185 . -5) (undo-tree-id186 . -5) (undo-tree-id187 . -5) (undo-tree-id188 . -5) (undo-tree-id189 . -5) (undo-tree-id190 . -5) (undo-tree-id191 . -4) (undo-tree-id192 . -4) (undo-tree-id193 . -4) (undo-tree-id194 . -4) (undo-tree-id195 . -4) (undo-tree-id196 . -4) (undo-tree-id197 . -4) (undo-tree-id198 . -4) (undo-tree-id199 . -3) (undo-tree-id200 . -3) (undo-tree-id201 . -3) (undo-tree-id202 . -3) (undo-tree-id203 . -3) (undo-tree-id204 . -3) (undo-tree-id205 . -3) (undo-tree-id206 . -3) (undo-tree-id207 . -2) (undo-tree-id208 . -2) (undo-tree-id209 . -2) (undo-tree-id210 . -2) (undo-tree-id211 . -2) (undo-tree-id212 . -2) (undo-tree-id213 . -2) (undo-tree-id214 . -2) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -7)) nil (26009 24668 785464 68000) 0 nil])
([nil nil ((12239 . 12249) (12238 . 12240) (#("\"" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . -12238) (12232 . 12239)) nil (26009 24668 785370 16000) 0 nil])
([nil nil ((12273 . 12281) (#("def" 0 3 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -12273) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -2) (undo-tree-id45 . -2) (undo-tree-id46 . -2) (undo-tree-id47 . -2) (undo-tree-id48 . -2) (undo-tree-id49 . -2) (undo-tree-id50 . -2) (undo-tree-id51 . -2) (undo-tree-id52 . -2) (undo-tree-id53 . -2) (undo-tree-id54 . -2) (undo-tree-id55 . -2) (undo-tree-id56 . -2) (undo-tree-id57 . -2) (undo-tree-id58 . -2) (undo-tree-id59 . -2) (undo-tree-id60 . -3) (undo-tree-id61 . -3) (undo-tree-id62 . -3) (undo-tree-id63 . -3) (undo-tree-id64 . -3) (undo-tree-id65 . -3) (undo-tree-id66 . -3) (undo-tree-id67 . -3) (undo-tree-id68 . -3) (undo-tree-id69 . -3) (undo-tree-id70 . -3) (undo-tree-id71 . -3) (undo-tree-id72 . -3) (undo-tree-id73 . -3) (undo-tree-id74 . -3) (undo-tree-id75 . -3) (undo-tree-id76 . -3) (undo-tree-id77 . -3) (undo-tree-id78 . -3) (undo-tree-id79 . -3) (undo-tree-id80 . -3) (undo-tree-id81 . -3) (undo-tree-id82 . -3) (undo-tree-id83 . -3) (undo-tree-id84 . -3) (undo-tree-id85 . -3) (undo-tree-id86 . -3) (undo-tree-id87 . -3) (undo-tree-id88 . -3) (undo-tree-id89 . -3) (undo-tree-id90 . -3) (undo-tree-id91 . -3) (undo-tree-id92 . -3) (undo-tree-id93 . -3) (undo-tree-id94 . -3) (undo-tree-id95 . -3) (undo-tree-id96 . -3) (undo-tree-id97 . -3) (undo-tree-id98 . -3) (undo-tree-id99 . -3) (undo-tree-id100 . -3) (undo-tree-id101 . -3) (undo-tree-id102 . -3) (undo-tree-id103 . -3) (undo-tree-id104 . -3) (undo-tree-id105 . -3) (undo-tree-id106 . -3) (undo-tree-id107 . -3) (undo-tree-id108 . -3) 12276 (12266 . 12276) (12257 . 12266) (12251 . 12258) (12250 . 12251)) nil (26009 24668 785367 577000) 0 nil])
([nil current ((12179 . 12184)) nil (26009 24668 785194 292000) 0 nil])
nil
