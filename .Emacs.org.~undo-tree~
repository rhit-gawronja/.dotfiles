(undo-tree-save-format-version . 1)
"b20900148e22820fb08f182cfb950e5ef4ada9c8"
[nil nil nil nil (25974 23129 428759 642000) 0 nil]
([nil nil ((14465 . 14469) (14464 . 14466) (14461 . 14464) (14460 . 14461) (14459 . 14460) (14438 . 14459) (14435 . 14438) (t 25950 562 396051 528000) 14434) nil (25974 23129 428758 892000) 0 nil])
([nil nil ((14498 . 14505) (14486 . 14498) (14485 . 14486) (14484 . 14486) (#("\"" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . -14484) (14483 . 14485) (14474 . 14483) (#("dire" 0 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -14474) (undo-tree-id2 . -4) (undo-tree-id3 . -4) 14478 (14472 . 14478) (#("i" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -14472) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("g" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . -14473) (undo-tree-id6 . -1) (undo-tree-id7 . -1) 14474 (14470 . 14474) (#("or" 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -14470) (undo-tree-id8 . -2) (undo-tree-id9 . -2) 14472 (14470 . 14472) (14469 . 14470)) nil (25974 23129 428757 527000) 0 nil])
([nil nil ((14548 . 14557) (14547 . 14549) (#("\"" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . -14547) (14547 . 14548) (14546 . 14547) (14540 . 14545) (14536 . 14540) (14535 . 14537) (#("\"" 0 1 (face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . -14535) (14535 . 14536) (14527 . 14536) (14526 . 14527) (14520 . 14526) (#("agen" 0 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -14520) (undo-tree-id0 . -4) (undo-tree-id1 . -4) 14524 (14511 . 14524) (14510 . 14512) (14507 . 14510) 14506) nil (25974 23129 428751 757000) 0 nil])
([nil nil ((5506 . 5750) (#("     (use-package doom-themes
    :init (load-theme 'doom-nova t))
;; (load-theme 'modus-operandi)
  (use-package nerd-icons
    )
  (use-package doom-modeline
    :init (doom-modeline-mode 1)
    :custom ((doom-modeline-height 15)))
  

" 0 5 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 5 6 (src-block t face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 6 17 (src-block t face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 17 18 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 18 29 (src-block t face (font-lock-constant-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 29 34 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 34 39 (src-block t face (font-lock-builtin-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 39 40 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 40 41 (src-block t face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 41 64 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 64 65 (src-block t face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 65 66 (src-block t face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 66 67 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 67 70 (src-block t face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 70 99 (src-block t face (font-lock-comment-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 99 101 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 101 102 (src-block t face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 102 113 (src-block t face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 113 114 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 114 124 (src-block t face (font-lock-constant-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 124 129 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 129 130 (src-block t face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 130 133 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 133 134 (src-block t face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 134 145 (src-block t face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 145 146 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 146 159 (src-block t face (font-lock-constant-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 159 164 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 164 169 (src-block t face (font-lock-builtin-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 169 170 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 170 171 (src-block t face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 171 191 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 191 192 (src-block t face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 192 197 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 197 204 (src-block t face (font-lock-builtin-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 204 205 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 205 206 (src-block t face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 206 207 (src-block t face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 207 230 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 230 231 (src-block t face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 231 232 (src-block t face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 232 233 (src-block t face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 233 238 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 5506) (undo-tree-id233 . -4) (undo-tree-id234 . -4) (undo-tree-id235 . 203) (undo-tree-id236 . -4) (undo-tree-id237 . -34) (undo-tree-id238 . -34) 5541 (t 25974 23129 439850 487000)) nil (25974 23227 988893 252000) 0 nil])
([nil nil ((5587 . 5591) (5586 . 5587) (5585 . 5587) (5510 . 5512) (5539 . 5541) (5582 . 5584) (5614 . 5616) (5644 . 5646) (5646 . 5648) (5679 . 5681) (5708 . 5710) 5506 (5578 . 5581) 5577) nil (25974 23227 989293 336000) 0 nil])
([nil nil ((5647 . 5649) (#("i" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -5647) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) 5648 (5631 . 5648) (#("i" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -5631) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (#("s" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -5632) (undo-tree-id260 . -1) 5633 (5632 . 5633) (5616 . 5632) (5614 . 5617) (5609 . 5614) (5506 . 5507) (#("      " 0 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil) 4 6 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . 5506) (5541 . 5542) (#("      " 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil) 2 6 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . 5541) (5583 . 5585) (5611 . 5617) (5615 . 5617) (5647 . 5648) (5651 . 5652) (5675 . 5676) (#("      " 0 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil) 4 6 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . 5675) (5683 . 5684) (5687 . 5688) (5714 . 5715) (#("      " 0 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil) 4 6 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . 5714) (5749 . 5750) (#("      " 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil) 2 6 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . 5749) 5506 (5610 . 5611) (5599 . 5610) (5597 . 5599) (5590 . 5597) (#("pack" 0 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -5590) (undo-tree-id261 . 4) (undo-tree-id262 . -4) (undo-tree-id263 . -4) 5594 (5591 . 5594)) nil (25974 23268 243025 37000) 0 nil] [nil nil ((#("; :init (load-theme 'doom-nova t))
  (use-" 0 2 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 2 34 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 34 35 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 35 37 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 37 38 (face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 38 42 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 5548) (undo-tree-id10 . -33) (undo-tree-id11 . -41) (undo-tree-id12 . -33) (undo-tree-id13 . -33) (undo-tree-id14 . -33) (undo-tree-id15 . -33) (undo-tree-id16 . -33) (undo-tree-id17 . -33) (undo-tree-id18 . -33) (undo-tree-id19 . -33) (undo-tree-id20 . -33) (undo-tree-id21 . -33) (undo-tree-id22 . -33) (undo-tree-id23 . -33) (undo-tree-id24 . -33) (undo-tree-id25 . -33) (undo-tree-id26 . -33) (undo-tree-id27 . -33) (undo-tree-id28 . -33) (undo-tree-id29 . -33) (undo-tree-id30 . -33) (undo-tree-id31 . -33) (undo-tree-id32 . -33) (undo-tree-id33 . -33) (undo-tree-id34 . -33) (undo-tree-id35 . -33) (undo-tree-id36 . -33) (undo-tree-id37 . -33) (undo-tree-id38 . -33) (undo-tree-id39 . -33) (undo-tree-id40 . -33) (undo-tree-id41 . -33) (undo-tree-id42 . -33) (undo-tree-id43 . -33) (undo-tree-id44 . -33) (undo-tree-id45 . -33) (undo-tree-id46 . -33) (undo-tree-id47 . -33) (undo-tree-id48 . -33) (undo-tree-id49 . -33) (undo-tree-id50 . -33) (undo-tree-id51 . -33) (undo-tree-id52 . -33) (undo-tree-id53 . -33) (undo-tree-id54 . -33) (undo-tree-id55 . -33) (undo-tree-id56 . -37) (undo-tree-id57 . -37) (undo-tree-id58 . -37) (undo-tree-id59 . -37) (undo-tree-id60 . -37) (undo-tree-id61 . -37) (undo-tree-id62 . -37) (undo-tree-id63 . -37) (undo-tree-id64 . -37) (undo-tree-id65 . -37) (undo-tree-id66 . -37) (undo-tree-id67 . -37) (undo-tree-id68 . -37) (undo-tree-id69 . -37) (undo-tree-id70 . -37) (undo-tree-id71 . -37) (undo-tree-id72 . -37) (undo-tree-id73 . -38) (undo-tree-id74 . -38) (undo-tree-id75 . -38) (undo-tree-id76 . -38) (undo-tree-id77 . -38) (undo-tree-id78 . -38) (undo-tree-id79 . -38) (undo-tree-id80 . -38) (undo-tree-id81 . -38) (undo-tree-id82 . -38) (undo-tree-id83 . -38) (undo-tree-id84 . -38) (undo-tree-id85 . -38) (undo-tree-id86 . -38) (undo-tree-id87 . -38) (undo-tree-id88 . -38) (undo-tree-id89 . -38) (undo-tree-id90 . -39) (undo-tree-id91 . -39) (undo-tree-id92 . -39) (undo-tree-id93 . -39) (undo-tree-id94 . -39) (undo-tree-id95 . -39) (undo-tree-id96 . -39) (undo-tree-id97 . -39) (undo-tree-id98 . -39) (undo-tree-id99 . -39) (undo-tree-id100 . -39) (undo-tree-id101 . -39) (undo-tree-id102 . -39) (undo-tree-id103 . -39) (undo-tree-id104 . -39) (undo-tree-id105 . -39) (undo-tree-id106 . -39) (undo-tree-id107 . -39) (undo-tree-id108 . -39) (undo-tree-id109 . -39) (undo-tree-id110 . -39) (undo-tree-id111 . -39) (undo-tree-id112 . -39) (undo-tree-id113 . -39) (undo-tree-id114 . -39) (undo-tree-id115 . -39) (undo-tree-id116 . -39) (undo-tree-id117 . -39) (undo-tree-id118 . -39) (undo-tree-id119 . -39) (undo-tree-id120 . -39) (undo-tree-id121 . -39) (undo-tree-id122 . -39) (undo-tree-id123 . -39) (undo-tree-id124 . -39) (undo-tree-id125 . -39) (undo-tree-id126 . -39) (undo-tree-id127 . -39) (undo-tree-id128 . -39) (undo-tree-id129 . -39) (undo-tree-id130 . -39) (undo-tree-id131 . -39) (undo-tree-id132 . -39) (undo-tree-id133 . -39) (undo-tree-id134 . -39) (undo-tree-id135 . -40) (undo-tree-id136 . -40) (undo-tree-id137 . -40) (undo-tree-id138 . -40) (undo-tree-id139 . -40) (undo-tree-id140 . -40) (undo-tree-id141 . -40) (undo-tree-id142 . -40) (undo-tree-id143 . -40) (undo-tree-id144 . -40) (undo-tree-id145 . -40) (undo-tree-id146 . -40) (undo-tree-id147 . -40) (undo-tree-id148 . -40) (undo-tree-id149 . -40) (undo-tree-id150 . -40) (undo-tree-id151 . -41) (undo-tree-id152 . -41) (undo-tree-id153 . -41) (undo-tree-id154 . -41) (undo-tree-id155 . -41) (undo-tree-id156 . -41) (undo-tree-id157 . -41) (undo-tree-id158 . -41) (undo-tree-id159 . -41) (undo-tree-id160 . -41) (undo-tree-id161 . -41) (undo-tree-id162 . -41) (undo-tree-id163 . -41) (undo-tree-id164 . -41) (undo-tree-id165 . -41) (undo-tree-id166 . -41) (undo-tree-id167 . -41) (undo-tree-id168 . -41) (undo-tree-id169 . -41) (undo-tree-id170 . -41) (undo-tree-id171 . -41) (undo-tree-id172 . -41) (undo-tree-id173 . -41) (undo-tree-id174 . -41) (undo-tree-id175 . -41) (undo-tree-id176 . -42) (undo-tree-id177 . -42) (undo-tree-id178 . -42) (undo-tree-id179 . -42) (undo-tree-id180 . -42) (undo-tree-id181 . -42) (undo-tree-id182 . -42) (undo-tree-id183 . -42) (undo-tree-id184 . -42) (undo-tree-id185 . -42) (undo-tree-id186 . -42) (undo-tree-id187 . -42) (undo-tree-id188 . -42) (undo-tree-id189 . -42) (undo-tree-id190 . -42) (undo-tree-id191 . -42) (undo-tree-id192 . -42) (undo-tree-id193 . -42) (undo-tree-id194 . -42) (undo-tree-id195 . -42) (undo-tree-id196 . -42) (undo-tree-id197 . -42) (undo-tree-id198 . -42) (undo-tree-id199 . -42) (undo-tree-id200 . -42) (undo-tree-id201 . -42) (undo-tree-id202 . -42) (undo-tree-id203 . -42) (undo-tree-id204 . -42) (undo-tree-id205 . -42) (undo-tree-id206 . -42) (undo-tree-id207 . -42) (undo-tree-id208 . -42) (undo-tree-id209 . -42) (undo-tree-id210 . -42) (undo-tree-id211 . -42) (undo-tree-id212 . -42) (undo-tree-id213 . -42) (undo-tree-id214 . -42) (undo-tree-id215 . -42) (undo-tree-id216 . -42) (undo-tree-id217 . -42) (undo-tree-id218 . -42) (undo-tree-id219 . -42) (undo-tree-id220 . -42) (undo-tree-id221 . -42) (undo-tree-id222 . -42) (undo-tree-id223 . -42) (undo-tree-id224 . -42) (undo-tree-id225 . -42) (undo-tree-id226 . -42) (undo-tree-id227 . -42) (undo-tree-id228 . -42) (undo-tree-id229 . -42) (undo-tree-id230 . -42) (undo-tree-id231 . -42) (undo-tree-id232 . -42) 5590) ((5548 . 5590)) (25974 23227 988883 387000) 0 nil])
([nil nil ((5649 . 5651)) nil (25974 23268 243006 234000) 0 nil])
nil
([nil nil ((#("p" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -1762) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) 1763 (1762 . 1763) (1344 . 1346) (1377 . 1378) (1379 . 1380) (1398 . 1399) (1400 . 1401) (1421 . 1422) (1423 . 1424) (1444 . 1445) (1446 . 1447) (1483 . 1485) (1509 . 1511) (1527 . 1529) (1548 . 1550) (1585 . 1587) (1615 . 1617) (#("              " 0 14 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . 1615) (1646 . 1648) (#("              " 0 14 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . 1646) (1678 . 1680) (#("              " 0 14 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . 1678) (1713 . 1715) 1340 (1773 . 1776) (t 25974 23268 246966 488000) 1741) nil (25974 23699 891285 123000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1842 . 1843) (nil fontified nil 1762 . 1843) (1762 . 1843) 1761) nil (25974 23699 891263 708000) 0 nil])
([nil current ((#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -1845) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (#("e" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -1846) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) 1847 (1846 . 1847) (1843 . 1846) (t 25974 23699 904267 450000) 1842) nil (25974 23717 914165 847000) 0 nil])
nil
